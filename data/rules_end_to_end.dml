::RULE
FLOAT:a
LITERAL_FLOAT:0.0

*(0.0, a)
=>
0.0

::RULE
FLOAT:a
LITERAL_FLOAT:0.0

*(a, 0.0)
=>
0.0

::RULE
MATRIX:A
LITERAL_FLOAT:0.0

+(A, 0.0)
=>
A

::RULE
MATRIX:A
LITERAL_FLOAT:0.0

+(0.0, A)
=>
A

::RULE
MATRIX:A
LITERAL_FLOAT:0.0

-(A,0.0)
=>
A

::RULE
MATRIX:A
LITERAL_FLOAT:0.0

*(A,0.0)
=>
const(A,0.0)

::RULE
MATRIX:A
LITERAL_FLOAT:0.0

*(0.0,A)
=>
const(A,0.0)

::RULE
MATRIX:A,B
LITERAL_FLOAT:0.0

+(-(0.0,A),B)
=>
-(B,A)

::RULE
MATRIX:A,B
LITERAL_FLOAT:0.0

-(0.0,-(B,A))
=>
-(A,B)

::RULE
MATRIX:A,B
LITERAL_FLOAT:1.0

*(A,/(1.0,B))
=>
/(A,B)

::RULE
MATRIX:A
FLOAT:a,b

+(-(A,a),b)
=>
+(A,-(b,a))

::RULE
MATRIX:A
FLOAT:a,b

+(a,-(A,b))
=>
+(A,-(a,b))

::RULE
MATRIX:A
FLOAT:a,b

+(-(a,A),b)
=>
-(+(a,b),A)

::RULE
MATRIX:A
FLOAT:a,b

+(a,-(b,A))
=>
-(+(a,b),A)

::RULE
MATRIX:A
FLOAT:a,b

-(-(A,a),b)
=>
-(A,+(b,a))

::RULE
MATRIX:A
FLOAT:a,b

-(a,-(A,b))
=>
-(+(a,b),A)

::RULE
MATRIX:A
FLOAT:a,b

-(-(a,A),b)
=>
-(-(a,b),A)

::RULE
MATRIX:A
FLOAT:a,b

-(a,-(b,A))
=>
+(-(a,b),A)

::RULE
MATRIX:tmp55180,y_corr,is_zero_y_corr,tmp23071,tmp8608
FLOAT:float599,tmp20367

+(*(*(y_corr,-(float599,is_zero_y_corr)),tmp8608),*(tmp20367,+(tmp23071,tmp55180)))
=>
+(*(*(tmp8608,y_corr),-(float599,is_zero_y_corr)),*(tmp20367,+(tmp55180,tmp23071)))

::RULE
MATRIX:tmp5995
FLOAT:tmp41945
LITERAL_FLOAT:1.0

*(/(1.0,tmp5995),tmp41945)
=>
/(tmp41945,tmp5995)

::RULE
MATRIX:tmp80035,tmp63699
FLOAT:f12880

+(-(tmp80035,f12880),tmp63699)
=>
-(+(tmp63699,tmp80035),f12880)

::RULE
FLOAT:tmp66496,tmp91996

-(tmp66496,cast.MATRIX(tmp91996))
=>
cast.MATRIX(-(tmp66496,tmp91996))

::RULE
MATRIX:key_unique,key

t(==(key_unique,t(key)))
=>
==(key,t(key_unique))

::RULE
MATRIX:tmp83271
FLOAT:tmp60732

sum(/(tmp83271,tmp60732))
=>
/(sum(tmp83271),tmp60732)

::RULE
MATRIX:X_batch,tmp92007

%*%(t(X_batch),tmp92007)
=>
{
t(%*%(t(tmp92007),X_batch))
}

::RULE
MATRIX:y_corr,is_zero_y_corr,tmp8608
FLOAT:float599
LITERAL_FLOAT:0.5

*(*(y_corr,-(float599,is_zero_y_corr)),tmp8608)
=>
*(*(y_corr,tmp8608),-(float599,is_zero_y_corr))

::RULE
MATRIX:scale_lambda,parsertemp150455
FLOAT:tmp43267

*(%*%(scale_lambda,parsertemp150455),tmp43267)
=>
{
%*%(*(tmp43267,scale_lambda),parsertemp150455)
}

::RULE
MATRIX:tmp97178,tmp8790
FLOAT:tmp30390

sum(*(*(tmp8790,tmp30390),tmp97178))
=>
*(tmp30390,sum(*(tmp97178,tmp8790)))

::RULE
MATRIX:tmp82242,tmp98488
FLOAT:a

-(+(a,tmp82242),tmp98488)
=>
+(-(tmp82242,tmp98488),a)

::RULE
MATRIX:tmp6500,obj
FLOAT:tmp26035

-(obj,+(tmp6500,tmp26035))
=>
-(-(obj,tmp6500),tmp26035)

::RULE
MATRIX:tmp29113,tmp73960
FLOAT:tmp68530

-(-(tmp68530,tmp73960),tmp29113)
=>
-(tmp68530,+(tmp73960,tmp29113))

::RULE
MATRIX:tmp98488,tmp82242
FLOAT:a

+(-(a,tmp98488),tmp82242)
=>
+(-(tmp82242,tmp98488),a)

::RULE
MATRIX:missing_mask_Y
FLOAT:tmp58606,tmp99142

+(*(tmp99142,missing_mask_Y),*(tmp58606,missing_mask_Y))
=>
*(missing_mask_Y,+(tmp99142,tmp58606))

::RULE
MATRIX:scale_lambda,parsertemp150455
FLOAT:tmp43267

*(tmp43267,%*%(scale_lambda,parsertemp150455))
=>
{
%*%(*(tmp43267,scale_lambda),parsertemp150455)
}

::RULE
MATRIX:B
FLOAT:a
LITERAL_FLOAT:1.0

*(/(1.0,B),a) 
=>
/(a,B)

::RULE
FLOAT:a,b

/(a,cast.MATRIX(b))
=>
cast.MATRIX(/(a,b))

::RULE
FLOAT:a,b

*(a,cast.MATRIX(b))
=>
cast.MATRIX(*(a,b))

::RULE
MATRIX:A,C
FLOAT:b,d

+(-(*(C,b),d),A)
=>
-(+*(A,b,C),d)

::RULE
MATRIX:A,B,D
FLOAT:c

+(-(*(D,c),B),A)
=>
-(A,-*(B,c,D))

::RULE
MATRIX:M40316,K,M9347
FLOAT:f32765

+(M9347,*(K,*(M40316,f32765)))
=>
+*(M9347,f32765,*(K,M40316))

::RULE
MATRIX:B,X,y
FLOAT:intercept

-(y,+(%*%(X,B),intercept))
=>
-(-(y,%*%(X,B)),intercept)

::RULE
MATRIX:A,B
FLOAT:f45081

+(-(f45081,A),B)
=>
+(f45081,-(B,A))

::RULE
MATRIX:M40316,K,M9347
FLOAT:f32765

+(M9347,*(*(f32765,K),M40316))
=>
+*(M9347,f32765,*(K,M40316))

::RULE
MATRIX:M40316,K,M9347
FLOAT:f32765

+(*(*(K,f32765),M40316),M9347)
=>
+*(M9347,f32765,*(K,M40316))

::RULE
MATRIX:A,M13119
LITERAL_FLOAT:1.0

*(/(1.0,M13119),A)
=>
/(A,M13119)

::RULE
MATRIX:M43656
LITERAL_FLOAT:2.0,0.5

/(M43656,2.0)
=>
*(0.5,M43656)

::RULE
MATRIX:A,C,D
FLOAT:b

+(-(b,%*%(C,D)),A)
=>
+(b,-(A,%*%(C,D)))

::RULE
MATRIX:A
FLOAT:f67634,f43240

-(-(f43240,A),f67634)
=>
-(-(f43240,f67634),A)

::RULE
MATRIX:M62235
LITERAL_FLOAT:5.0E-4,2000.0

/(M62235,2000.0)
=>
*(5.0E-4,M62235)

::RULE
MATRIX:A,M13119
LITERAL_FLOAT:1.0

*(A,/(1.0,M13119))
=>
/(A,M13119)

::RULE
MATRIX:M48693
FLOAT:f68833
LITERAL_FLOAT:0.0

*(f68833,-(0.0,M48693))
=>
*(M48693,-(0.0,f68833))

::RULE
MATRIX:M67673,M97683,M22650
FLOAT:f97734

-(M22650,*(*(f97734,M67673),M97683))
=>
-*(M22650,f97734,*(M97683,M67673))

::RULE
MATRIX:A,M350,M67233
FLOAT:f75306

-(-(f75306,M67233),*(A,M350))
=>
-(f75306,+(*(A,M350),M67233))

::RULE
MATRIX:A,M350,M67233
FLOAT:f75306

-(-(f75306,*(A,M350)),M67233)
=>
-(f75306,+(*(A,M350),M67233))

::RULE
MATRIX:A,B,C
FLOAT:d

+(-(C,d),%*%(A,B))
=>
-(+(C,%*%(A,B)),d)